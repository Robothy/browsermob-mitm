plugins {
    id 'java'
    id 'maven-publish'
    id 'com.robothy.github-repository-release-plugin' version '1.3'
}

group 'io.github.robothy'

repositories {
//    maven { url 'https://maven.aliyun.com/repository/public/' }
//    maven { url 'https://maven.aliyun.com/repository/spring/'}
    mavenLocal()
    mavenCentral()
}

dependencies {

    implementation "org.bouncycastle:bcprov-jdk15on:1.68"
    implementation "org.bouncycastle:bcpkix-jdk15on:1.68"
    implementation "org.slf4j:slf4j-api:1.7.25"
    implementation "com.google.guava:guava:31.1-jre"
    implementation "io.netty:netty-all:4.1.15.Final"
    implementation "net.lightbody.bmp:littleproxy:1.1.0-beta-bmp-17"
//    implementation "org.mockito:mockito-core:2.8.47"
//    implementation "org.apache.logging.log4j:log4j-core:2.17.1"
//    implementation "org.apache.logging.log4j:log4j-slf4j-impl:2.17.1"
//    implementation "com.fasterxml.jackson.core:jackson-core:2.13.0"
//    implementation "com.fasterxml.jackson.core:jackson-annotations:2.8.9"
//
//    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
//    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

java {
    withSourcesJar()
}

publishing {

    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
        mavenLocal()


        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/Robothy/browsermob-mitm")
            credentials {
                username = project.findProperty("GITHUB_USERNAME") ?: System.getenv("GITHUB_USERNAME")
                password = project.findProperty("GITHUB_TOKEN") ?: System.getenv("GITHUB_TOKEN")
            }
        }

    }
}


test {
    useJUnitPlatform()
}